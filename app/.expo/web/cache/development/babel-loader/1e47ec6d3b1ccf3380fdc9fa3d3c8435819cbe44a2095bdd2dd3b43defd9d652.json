{"ast":null,"code":"export function saveLanguageToDB(language) {\n  var url = \"http://localhost:9000/db.php\";\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: `language=${encodeURIComponent(language)}`\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log('Success:', data);\n  }).catch(function (error) {\n    console.error(\"Error saving language to DB:\", error);\n  });\n}\nexport function getLanguages() {\n  var url = \"http://localhost:9000/db.php\";\n  fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log('Success:', data);\n  }).catch(function (error) {\n    console.error(\"Error retrieving languages:\", error);\n  });\n}","map":{"version":3,"names":["saveLanguageToDB","language","url","fetch","method","headers","body","encodeURIComponent","then","response","json","data","console","log","catch","error","getLanguages"],"sources":["C:/Users/schef/Documents/git/Vocab/app/scripts/api.js"],"sourcesContent":["export function saveLanguageToDB(language) {\r\n    const url = \"http://localhost:9000/db.php\";\r\n\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        body: `language=${encodeURIComponent(language)}`,\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            // Handle the response data as needed\r\n            console.log('Success:', data);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error saving language to DB:\", error);\r\n        });\r\n}\r\n\r\nexport function getLanguages() {\r\n    const url = \"http://localhost:9000/db.php\";\r\n\r\n    fetch(url, {\r\n        method: \"GET\", // Assuming you are retrieving languages, use GET\r\n        headers: {\r\n            \"Content-Type\": \"application/json\", // Change to JSON if the response is JSON\r\n        },\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            // Handle the response data as needed\r\n            console.log('Success:', data);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error retrieving languages:\", error);\r\n        });\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAACC,QAAQ,EAAE;EACvC,IAAMC,GAAG,GAAG,8BAA8B;EAE1CC,KAAK,CAACD,GAAG,EAAE;IACPE,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAG,YAAWC,kBAAkB,CAACN,QAAQ,CAAE;EACnD,CAAC,CAAC,CACGO,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,IAAI,EAAK;IAEZC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;EACjC,CAAC,CAAC,CACDG,KAAK,CAAC,UAACC,KAAK,EAAK;IACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACxD,CAAC,CAAC;AACV;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC3B,IAAMd,GAAG,GAAG,8BAA8B;EAE1CC,KAAK,CAACD,GAAG,EAAE;IACPE,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACGG,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,IAAI,EAAK;IAEZC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;EACjC,CAAC,CAAC,CACDG,KAAK,CAAC,UAACC,KAAK,EAAK;IACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACvD,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}